<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beyond233.his.mapper.DepartmentMapper">
    <!--查询所有的科室类型-->
    <select id="selectAllDepartmentTypes" resultType="String">
        SELECT DISTINCT department_type FROM department;
    </select>
    <!--根据科室类型查询出对应的科室id，name的集合-->
    <select id="selectDepartIdAndNameByType" resultType="com.beyond233.his.vo.DepartmentIdAndNameRecord">
        SELECT department_id,department_name FROM department WHERE department_type=#{departType};
    </select>
    <!--查询所有科室id和对应的名称-->
    <select id="selectAllDepartIdAndName" resultType="com.beyond233.his.vo.DepartmentIdAndNameRecord">
        SELECT department_id,department_name FROM department;
    </select>
    <resultMap id="BaseResultMap" type="com.beyond233.his.entity.Department">
        <id column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
        <result column="department_type" jdbcType="VARCHAR" property="departmentType"/>
        <result column="department_addr" jdbcType="VARCHAR" property="departmentAddr"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.beyond233.his.entity.Department">
        <result column="department_info" jdbcType="LONGVARCHAR" property="departmentInfo"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        department_id, department_name, department_type, department_addr
    </sql>
    <sql id="Blob_Column_List">
        department_info
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.beyond233.his.entity.DepartmentExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.beyond233.his.entity.DepartmentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from department
        where department_id = #{departmentId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from department
        where department_id = #{departmentId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.beyond233.his.entity.DepartmentExample">
        delete from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.beyond233.his.entity.Department">
        insert into department (department_id, department_name, department_type,
        department_addr, department_info)
        values (#{departmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR},
        #{departmentType,jdbcType=VARCHAR},
        #{departmentAddr,jdbcType=VARCHAR}, #{departmentInfo,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.beyond233.his.entity.Department">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="departmentName != null">
                department_name,
            </if>
            <if test="departmentType != null">
                department_type,
            </if>
            <if test="departmentAddr != null">
                department_addr,
            </if>
            <if test="departmentInfo != null">
                department_info,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="departmentName != null">
                #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentType != null">
                #{departmentType,jdbcType=VARCHAR},
            </if>
            <if test="departmentAddr != null">
                #{departmentAddr,jdbcType=VARCHAR},
            </if>
            <if test="departmentInfo != null">
                #{departmentInfo,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.beyond233.his.entity.DepartmentExample" resultType="java.lang.Long">
        select count(*) from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update department
        <set>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.departmentName != null">
                department_name = #{record.departmentName,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentType != null">
                department_type = #{record.departmentType,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentAddr != null">
                department_addr = #{record.departmentAddr,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentInfo != null">
                department_info = #{record.departmentInfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update department
        set department_id = #{record.departmentId,jdbcType=INTEGER},
        department_name = #{record.departmentName,jdbcType=VARCHAR},
        department_type = #{record.departmentType,jdbcType=VARCHAR},
        department_addr = #{record.departmentAddr,jdbcType=VARCHAR},
        department_info = #{record.departmentInfo,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update department
        set department_id = #{record.departmentId,jdbcType=INTEGER},
        department_name = #{record.departmentName,jdbcType=VARCHAR},
        department_type = #{record.departmentType,jdbcType=VARCHAR},
        department_addr = #{record.departmentAddr,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.beyond233.his.entity.Department">
        update department
        <set>
            <if test="departmentName != null">
                department_name = #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentType != null">
                department_type = #{departmentType,jdbcType=VARCHAR},
            </if>
            <if test="departmentAddr != null">
                department_addr = #{departmentAddr,jdbcType=VARCHAR},
            </if>
            <if test="departmentInfo != null">
                department_info = #{departmentInfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where department_id = #{departmentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.beyond233.his.entity.Department">
        update department
        set department_name = #{departmentName,jdbcType=VARCHAR},
        department_type = #{departmentType,jdbcType=VARCHAR},
        department_addr = #{departmentAddr,jdbcType=VARCHAR},
        department_info = #{departmentInfo,jdbcType=LONGVARCHAR}
        where department_id = #{departmentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.beyond233.his.entity.Department">
        update department
        set department_name = #{departmentName,jdbcType=VARCHAR},
        department_type = #{departmentType,jdbcType=VARCHAR},
        department_addr = #{departmentAddr,jdbcType=VARCHAR}
        where department_id = #{departmentId,jdbcType=INTEGER}
    </update>
</mapper>