<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beyond233.his.mapper.RegisterMapper">
    <!--查询某一科室的全部挂号排班信息-->
    <select id="selectAllRegistersByDepartId" resultType="com.beyond233.his.vo.ExpertRegisterRecord">
        SELECT
        register_id,
        register_amount,
        register_balance,
        register_date,
        register_price,
        register.department_id,
        department_name,
        department_type,
        emp.emp_id,
        emp_name
        FROM
        department,
        emp,
        register
        WHERE
        department.department_id = register.department_id
        AND emp.emp_id = register.emp_id
        AND department.department_id=#{departmentId};
    </select>
    <!--查询专家出诊信息-->
    <select id="selectAllExpertRegister" resultType="com.beyond233.his.vo.ExpertRegisterRecord">
        SELECT
        register_id,
        register_amount,
        register_balance,
        register_date,
        register_price,
        register.department_id,
        department_type,
        department_name,
        emp.emp_id,
        emp_name
        FROM
        department,
        emp,
        register
        WHERE
        department.department_id = register.department_id
        AND emp.emp_id = register.emp_id
        AND emp_title LIKE '教授%';
    </select>
    <resultMap id="BaseResultMap" type="com.beyond233.his.entity.Register">
        <id column="register_id" jdbcType="INTEGER" property="registerId"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="emp_id" jdbcType="INTEGER" property="empId"/>
        <result column="register_date" jdbcType="DATE" property="registerDate"/>
        <result column="register_price" jdbcType="DOUBLE" property="registerPrice"/>
        <result column="register_amount" jdbcType="INTEGER" property="registerAmount"/>
        <result column="register_balance" jdbcType="INTEGER" property="registerBalance"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        register_id, department_id, emp_id, register_date, register_price, register_amount,
        register_balance
    </sql>
    <select id="selectByExample" parameterType="com.beyond233.his.entity.RegisterExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from register
        where register_id = #{registerId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from register
        where register_id = #{registerId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.beyond233.his.entity.RegisterExample">
        delete from register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.beyond233.his.entity.Register">
        insert into register (register_id, department_id, emp_id,
        register_date, register_price, register_amount,
        register_balance)
        values (#{registerId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER},
        #{registerDate,jdbcType=DATE}, #{registerPrice,jdbcType=DOUBLE}, #{registerAmount,jdbcType=INTEGER},
        #{registerBalance,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.beyond233.his.entity.Register">
        insert into register
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="registerId != null">
                register_id,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="empId != null">
                emp_id,
            </if>
            <if test="registerDate != null">
                register_date,
            </if>
            <if test="registerPrice != null">
                register_price,
            </if>
            <if test="registerAmount != null">
                register_amount,
            </if>
            <if test="registerBalance != null">
                register_balance,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="registerId != null">
                #{registerId,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="empId != null">
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="registerDate != null">
                #{registerDate,jdbcType=DATE},
            </if>
            <if test="registerPrice != null">
                #{registerPrice,jdbcType=DOUBLE},
            </if>
            <if test="registerAmount != null">
                #{registerAmount,jdbcType=INTEGER},
            </if>
            <if test="registerBalance != null">
                #{registerBalance,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.beyond233.his.entity.RegisterExample" resultType="java.lang.Long">
        select count(*) from register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update register
        <set>
            <if test="record.registerId != null">
                register_id = #{record.registerId,jdbcType=INTEGER},
            </if>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.empId != null">
                emp_id = #{record.empId,jdbcType=INTEGER},
            </if>
            <if test="record.registerDate != null">
                register_date = #{record.registerDate,jdbcType=DATE},
            </if>
            <if test="record.registerPrice != null">
                register_price = #{record.registerPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.registerAmount != null">
                register_amount = #{record.registerAmount,jdbcType=INTEGER},
            </if>
            <if test="record.registerBalance != null">
                register_balance = #{record.registerBalance,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update register
        set register_id = #{record.registerId,jdbcType=INTEGER},
        department_id = #{record.departmentId,jdbcType=INTEGER},
        emp_id = #{record.empId,jdbcType=INTEGER},
        register_date = #{record.registerDate,jdbcType=DATE},
        register_price = #{record.registerPrice,jdbcType=DOUBLE},
        register_amount = #{record.registerAmount,jdbcType=INTEGER},
        register_balance = #{record.registerBalance,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.beyond233.his.entity.Register">
        update register
        <set>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="empId != null">
                emp_id = #{empId,jdbcType=INTEGER},
            </if>
            <if test="registerDate != null">
                register_date = #{registerDate,jdbcType=DATE},
            </if>
            <if test="registerPrice != null">
                register_price = #{registerPrice,jdbcType=DOUBLE},
            </if>
            <if test="registerAmount != null">
                register_amount = #{registerAmount,jdbcType=INTEGER},
            </if>
            <if test="registerBalance != null">
                register_balance = #{registerBalance,jdbcType=INTEGER},
            </if>
        </set>
        where register_id = #{registerId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.beyond233.his.entity.Register">
        update register
        set department_id = #{departmentId,jdbcType=INTEGER},
        emp_id = #{empId,jdbcType=INTEGER},
        register_date = #{registerDate,jdbcType=DATE},
        register_price = #{registerPrice,jdbcType=DOUBLE},
        register_amount = #{registerAmount,jdbcType=INTEGER},
        register_balance = #{registerBalance,jdbcType=INTEGER}
        where register_id = #{registerId,jdbcType=INTEGER}
    </update>
</mapper>