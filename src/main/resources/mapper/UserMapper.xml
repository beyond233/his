<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beyond233.his.mapper.UserMapper">
    <!--通过id查询用户-->
    <select id="pickOneUserById" resultType="com.beyond233.his.entity.User">
        select *
        from user
        where user_id =#{userId};
    </select>

    <!--@Param注解测试Mapper-->
    <select id="selectDemo" resultType="String">
        select user_name from user where user_id=#{id} and user_sex=#{sex};
    </select>
    <!--修改密码-->
    <update id="updateUserPassword">
        update user set user_password=#{param2} where user_id =#{param1};
    </update>
    <!--通过手机号查询用户-->
    <select id="selectUserByUserPhone" resultType="com.beyond233.his.entity.User">
        select *
        from user
        where user_phone = #{userPhone};
    </select>
    <!--通过患者id查询其所有的预约记录-->
    <select id="selectAllUserRegisterRecords" resultType="com.beyond233.his.vo.UserRegisterRecord">
        SELECT
        register.register_id,
        register.register_date,
        department.department_name,
        emp.emp_name,
        register.register_price,
        register_order.`status`
        FROM
        register,
        register_order,
        department,
        emp
        WHERE
        user_id = #{id}
        AND register.register_id = register_order.register_id
        AND register.department_id = department.department_id
        AND register.emp_id = emp.emp_id
    </select>
    <!--通过患者id查询其所有的就诊记录-->
    <select id="selectAllUserOrderRecords" resultType="com.beyond233.his.vo.UserOrderRecord">
        SELECT
        order_id,
        order_date,
        emp.emp_id,
        emp_name,
        department_name,
        order_symptom,
        order_result
        FROM
        `order`,
        emp,
        department
        WHERE
        user_id = #{id}
        AND `order`.emp_id = emp.emp_id
        AND emp.department_id = department.department_id
    </select>
    <resultMap id="BaseResultMap" type="com.beyond233.his.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_sex" jdbcType="VARCHAR" property="userSex"/>
        <result column="user_birth" jdbcType="DATE" property="userBirth"/>
        <result column="user_history" jdbcType="VARCHAR" property="userHistory"/>
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id, user_password, user_name, user_sex, user_birth, user_history, user_phone
    </sql>
    <select id="selectByExample" parameterType="com.beyond233.his.entity.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.beyond233.his.entity.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.beyond233.his.entity.User">
        insert into user (user_id, user_password, user_name,
        user_sex, user_birth, user_history,
        user_phone)
        values (#{userId,jdbcType=INTEGER}, #{userPassword,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{userSex,jdbcType=VARCHAR}, #{userBirth,jdbcType=DATE}, #{userHistory,jdbcType=VARCHAR},
        #{userPhone,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.beyond233.his.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="userBirth != null">
                user_birth,
            </if>
            <if test="userHistory != null">
                user_history,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userBirth != null">
                #{userBirth,jdbcType=DATE},
            </if>
            <if test="userHistory != null">
                #{userHistory,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.beyond233.his.entity.UserExample" resultType="java.lang.Long">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userSex != null">
                user_sex = #{record.userSex,jdbcType=VARCHAR},
            </if>
            <if test="record.userBirth != null">
                user_birth = #{record.userBirth,jdbcType=DATE},
            </if>
            <if test="record.userHistory != null">
                user_history = #{record.userHistory,jdbcType=VARCHAR},
            </if>
            <if test="record.userPhone != null">
                user_phone = #{record.userPhone,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set user_id = #{record.userId,jdbcType=INTEGER},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_sex = #{record.userSex,jdbcType=VARCHAR},
        user_birth = #{record.userBirth,jdbcType=DATE},
        user_history = #{record.userHistory,jdbcType=VARCHAR},
        user_phone = #{record.userPhone,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.beyond233.his.entity.User">
        update user
        <set>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userBirth != null">
                user_birth = #{userBirth,jdbcType=DATE},
            </if>
            <if test="userHistory != null">
                user_history = #{userHistory,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.beyond233.his.entity.User">
        update user
        set user_password = #{userPassword,jdbcType=VARCHAR},
        user_name = #{userName,jdbcType=VARCHAR},
        user_sex = #{userSex,jdbcType=VARCHAR},
        user_birth = #{userBirth,jdbcType=DATE},
        user_history = #{userHistory,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>